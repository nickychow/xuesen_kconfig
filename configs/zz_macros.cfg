#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_CLEANING
    CLEAN_NOZZLE
    STATUS_HOMING
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600

    ##  Uncomment for 300 build
    G0 X150 Y150 Z30 F3600

    ##  Uncomment for 350mm build
    #G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
    STATUS_READY
# gcode:
#     SAVE_GCODE_STATE NAME=STATE_G32
#     STATUS_HEATING
#     # Set and wait for bed to reach temperature for TAP
#     M190 S100
#     # Set and wait for nozzle to reach temperature
#     M109 S150
#     STATUS_HOMING
#     G28
#     STATUS_LEVELING
#     QUAD_GANTRY_LEVEL
#     STATUS_HOMING
#     G28
#     G0 X150 Y150 Z30 F3600
#     STATUS_READY
#     ##  Uncomment for for your size printer:
#     #--------------------------------------------------------------------
#     ##  Uncomment for 250mm build
#     #G0 X125 Y125 Z30 F3600

#     ##  Uncomment for 300 build

#     ##  Uncomment for 350mm build
#     #G0 X175 Y175 Z30 F3600
#     #--------------------------------------------------------------------
#     RESTORE_GCODE_STATE NAME=STATE_G32


#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    STATUS_PRINTING

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    STATUS_CLEANING
    CLEAN_NOZZLE
    STATUS_OFF
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

######################################################################
# KlipperScreen
######################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(50) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    G1 E350 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    M300
    M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(50) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M300 # beep
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity} # fast-unload
    M300
    M300
    RESTORE_GCODE_STATE NAME=unload_state

######################################################################
# Auto Z Calibration
######################################################################

# [gcode_macro CALIBRATE_Z]
# rename_existing: BASE_CALIBRATE_Z
# gcode:
#     {% set bed_position = params.BED_POSITION|default('None') %}
#     G28                         # can also be a conditional homing macro
#     M117 Z-Calibration..
#     ATTACH_PROBE                # a macro for fetching the probe first
#     {% if bed_position != 'None' %}
#       BASE_CALIBRATE_Z BED_POSITION={bed_position}
#     {% else %}
#       BASE_CALIBRATE_Z
#     {% endif %}
#     DETACH_PROBE                # and parking it afterwards (or DOCK_PROBE in klicky macros)
#     M117

######################################################################
# Clean Nozzle
######################################################################

[gcode_macro CLEAN_NOZZLE]
# description: Cleans the nozzle on the scrub brush
# variable_start_x: 280
# variable_start_y: 301
# variable_start_z: 3.85
# variable_wipe_dist: -50
# variable_wipe_qty: 6
# variable_wipe_spd: 200
# variable_raise_distance: 30

gcode:
    {% set start_x = params.START_X|default(280)|float %}
    {% set start_y = params.START_Y|default(301)|float %}
    {% set start_z = params.START_Z|default(3.70)|float %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}

 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}

 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

[gcode_macro DRAW_LINE]
gcode:
    # description: Draw a new line to clean nozzle
    #----------- Draw Line New -----------
    G90
    G0 X110 Y0 Z0.2 F9000         # Move to start position
    G92 E0                        # Reset Extruder
    G1 E15 F600                   # Extrude a little
    G1 X10 E20 F1000              # Draw line
    G92 E0                        # Reset Extruder
    G91                           # relative positioning
    G0 X50 F18000                 # Wipe line 1
    G0 X-40 F18000                # Wipe line 2
    G0 Z5 F1000                   # Raise nozzle
    G0 Y5 F1000                   # move nozzle away a little
    G90
    #-------------------------------------

######################################################################
# Filament Change
######################################################################

[pause_resume]
# recover_velocity: 50.0

# ------------------------- Filament Change --------------------------
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
# --------------------------------------------------------------------

# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# default_parameter_E: 1 # edit to your perfered retract length
# gcode:
#     G91
#     G1 E{E} F2100
#     G90
#     RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#     BASE_RESUME

######################################################################
# Cancel object
######################################################################

# ------------------------- Cancel object --------------------------
# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}